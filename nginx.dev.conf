events {}

http {
    # This map is crucial for correctly setting the Connection header
    # based on whether the client requested an upgrade.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        proxy_buffering off; # Good to keep for streaming/websockets

        location / { # This applies to all paths, adjust if only specific paths need WS
            proxy_pass http://app:3000;

            # Standard proxy headers (keep these)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # === WebSocket proxy settings ===
            # 1. Force HTTP/1.1 for the upstream connection (VERY IMPORTANT)
            proxy_http_version 1.1;

            # 2. Pass the Upgrade header *from the client* ($http_upgrade variable)
            #    Do NOT hardcode "websocket" here.
            proxy_set_header Upgrade $http_upgrade;

            # 3. Set the Connection header using the map defined above.
            #    This correctly signals the upgrade intent to the backend *only when needed*.
            proxy_set_header Connection $connection_upgrade;
            # ===============================
        }
    }
}
