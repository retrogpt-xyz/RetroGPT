events {}

http {
    # This map is crucial for correctly setting the Connection header
    # based on whether the client requested an upgrade.
    map ${DOLLAR}http_upgrade ${DOLLAR}connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        proxy_buffering off;

        location / {
            return 301 https://${DOLLAR}host${DOLLAR}request_uri;
        }
    }

    server {
        listen 443 ssl;
        proxy_buffering off;

        ssl_certificate /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${HOSTNAME}/privkey.pem;

        # Route API requests to the API service
        location /api/ {
            proxy_pass http://rgpt_api:4002;

            # Standard proxy headers
            proxy_set_header Host ${DOLLAR}host;
            proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
            proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade ${DOLLAR}http_upgrade;
            proxy_set_header Connection ${DOLLAR}connection_upgrade;
        }

        # Route everything else to the static service
        location / {
            proxy_pass http://rgpt_static:4001;

            # Standard proxy headers
            proxy_set_header Host ${DOLLAR}host;
            proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
            proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade ${DOLLAR}http_upgrade;
            proxy_set_header Connection ${DOLLAR}connection_upgrade;
        }
    }
}
