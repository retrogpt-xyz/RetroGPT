events {}

# env HOSTNAME;

http {
    # This map is crucial for correctly setting the Connection header
    # based on whether the client requested an upgrade.
    map $http_upgrade $connection_upgrade {
        default upgrade; # If $http_upgrade is set (e.g., to "websocket"), use "upgrade"
        ''      close;   # If $http_upgrade is empty, use "close" (or could be keep-alive for non-WS)
    }

    server {
        listen 80;
        proxy_buffering off;

        location / {
            return 301 https://${DOLLAR}host${DOLLAR}request_uri;
        }
    }

    server {
        listen 443 ssl;
        proxy_buffering off;

        ssl_certificate /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${HOSTNAME}/privkey.pem;

        location / {
            proxy_pass http://app:3000;

            # Standard proxy headers
            proxy_set_header Host ${DOLLAR}host;
            proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
            proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;

            # === WebSocket proxy settings ===
            # 1. Force HTTP/1.1 for the upstream connection
            proxy_http_version 1.1;

            # 2. Pass the Upgrade header from the client
            proxy_set_header Upgrade ${DOLLAR}http_upgrade;

            # 3. Set the Connection header using the map defined above
            proxy_set_header Connection ${DOLLAR}connection_upgrade;
            # ===============================
        }
    }
}
